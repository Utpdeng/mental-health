25-01-26.15:41:06.585 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 2516 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.15:41:06.587 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.15:41:06.587 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.15:41:07.125 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.15:41:07.139 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
25-01-26.15:41:07.531 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.15:41:07.532 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.15:41:07.532 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.15:41:07.532 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.15:41:07.535 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.15:41:07.542 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.15:41:07.542 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.15:41:07.542 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.15:41:07.704 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.15:41:07.704 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1067 ms
25-01-26.15:41:08.159 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@113ee1ce]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.15:41:08.167 [cluster-ClusterId{value='6795e71493927736563a8269', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:2}] to localhost:27017
25-01-26.15:41:08.167 [cluster-rtt-ClusterId{value='6795e71493927736563a8269', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:27017
25-01-26.15:41:08.167 [cluster-ClusterId{value='6795e71493927736563a8269', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17847100}
25-01-26.15:41:08.689 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.15:41:08.704 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.15:41:08.711 [main            ] INFO  App                    - Started App in 2.629 seconds (JVM running for 4.575)
25-01-26.15:41:21.031 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.15:41:21.032 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.15:41:21.032 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-01-26.15:41:21.788 [http-nio-8090-exec-1] ERROR JwtInterceptor         - Token验证失败
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-01-24T21:58:31Z. Current time: 2025-01-26T15:41:21Z, a difference of 150170785 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.dil.common.utils.JwtUtil.getClaimsFromToken(JwtUtil.java:59)
	at com.dil.common.interceptor.JwtInterceptor.preHandle(JwtInterceptor.java:54)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.15:41:46.476 [http-nio-8090-exec-3] INFO  UserController         - 收到用户登录请求，用户名：admin
25-01-26.15:41:46.481 [http-nio-8090-exec-3] INFO  UserService            - 用户登录，用户名：admin
25-01-26.15:41:46.496 [http-nio-8090-exec-3] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.15:41:46.760 [http-nio-8090-exec-3] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.15:41:46.822 [http-nio-8090-exec-3] INFO  UserService            - 用户登录成功，用户ID：1
25-01-26.15:41:46.855 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户信息请求，用户ID：1
25-01-26.15:41:46.860 [http-nio-8090-exec-4] INFO  UserService            - 获取用户信息，用户ID：1
25-01-26.15:41:53.673 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:41:53.674 [http-nio-8090-exec-2] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:41:55.566 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:41:55.567 [http-nio-8090-exec-5] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:23.943 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:23.944 [http-nio-8090-exec-6] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:24.457 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:24.458 [http-nio-8090-exec-7] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:26.178 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:26.179 [http-nio-8090-exec-9] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:26.501 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:26.501 [http-nio-8090-exec-8] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:29.145 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:29.146 [http-nio-8090-exec-10] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:30.320 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:30.321 [http-nio-8090-exec-1] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:32.092 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:32.093 [http-nio-8090-exec-3] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:32.781 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:32.782 [http-nio-8090-exec-4] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:33.101 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:33.101 [http-nio-8090-exec-2] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:34.254 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户列表请求，角色：admin
25-01-26.15:42:34.254 [http-nio-8090-exec-5] INFO  UserService            - 获取用户列表，角色：admin
25-01-26.15:42:34.506 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户列表请求，角色：admin
25-01-26.15:42:34.507 [http-nio-8090-exec-6] INFO  UserService            - 获取用户列表，角色：admin
25-01-26.15:42:35.655 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户列表请求，角色：doctor
25-01-26.15:42:35.656 [http-nio-8090-exec-7] INFO  UserService            - 获取用户列表，角色：doctor
25-01-26.15:42:35.977 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户列表请求，角色：doctor
25-01-26.15:42:35.977 [http-nio-8090-exec-9] INFO  UserService            - 获取用户列表，角色：doctor
25-01-26.15:42:37.446 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户列表请求，角色：user
25-01-26.15:42:37.447 [http-nio-8090-exec-8] INFO  UserService            - 获取用户列表，角色：user
25-01-26.15:42:37.711 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户列表请求，角色：user
25-01-26.15:42:37.711 [http-nio-8090-exec-10] INFO  UserService            - 获取用户列表，角色：user
25-01-26.15:42:38.871 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:38.872 [http-nio-8090-exec-1] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:42:39.193 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:42:39.193 [http-nio-8090-exec-3] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:43:00.157 [http-nio-8090-exec-4] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.15:43:00.159 [http-nio-8090-exec-4] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.15:43:02.446 [http-nio-8090-exec-2] INFO  PsychologistController - 收到获取心理医生详情请求，心理医生ID：1
25-01-26.15:43:02.447 [http-nio-8090-exec-2] INFO  PsychologistService    - 获取心理医生详情，心理医生ID：1
25-01-26.15:43:08.073 [http-nio-8090-exec-5] ERROR GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.15:43:24.555 [http-nio-8090-exec-6] INFO  PsychologistController - 收到获取心理医生详情请求，心理医生ID：1
25-01-26.15:43:24.555 [http-nio-8090-exec-6] INFO  PsychologistService    - 获取心理医生详情，心理医生ID：1
25-01-26.15:43:28.680 [http-nio-8090-exec-7] ERROR GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.15:44:14.479 [http-nio-8090-exec-9] ERROR GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.15:44:26.687 [http-nio-8090-exec-8] ERROR GlobalExceptionHandler - 系统异常
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.15:45:20.126 [http-nio-8090-exec-10] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.15:45:20.127 [http-nio-8090-exec-10] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.15:45:33.150 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：1
25-01-26.15:45:33.151 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：1
25-01-26.15:45:33.285 [http-nio-8090-exec-3] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.15:45:33.285 [http-nio-8090-exec-3] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.15:45:43.730 [http-nio-8090-exec-4] INFO  PsychologistController - 收到获取心理医生详情请求，心理医生ID：1
25-01-26.15:45:43.730 [http-nio-8090-exec-4] INFO  PsychologistService    - 获取心理医生详情，心理医生ID：1
25-01-26.15:45:56.509 [http-nio-8090-exec-2] INFO  PsychologistController - 收到更新心理医生信息请求，心理医生ID：1
25-01-26.15:45:56.510 [http-nio-8090-exec-2] INFO  PsychologistService    - 更新心理医生信息，心理医生ID：1
25-01-26.15:45:56.510 [http-nio-8090-exec-2] INFO  PsychologistService    - 获取心理医生详情，心理医生ID：1
25-01-26.15:45:56.517 [http-nio-8090-exec-2] INFO  PsychologistService    - 心理医生信息已更新，ID：1
25-01-26.15:46:04.792 [http-nio-8090-exec-5] INFO  PsychologistController - 收到获取心理医生详情请求，心理医生ID：1
25-01-26.15:46:04.792 [http-nio-8090-exec-5] INFO  PsychologistService    - 获取心理医生详情，心理医生ID：1
25-01-26.15:46:16.322 [http-nio-8090-exec-6] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：resigned
25-01-26.15:46:16.322 [http-nio-8090-exec-6] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=resigned
25-01-26.15:46:18.394 [http-nio-8090-exec-7] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：active
25-01-26.15:46:18.394 [http-nio-8090-exec-7] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=active
25-01-26.15:47:42.534 [http-nio-8090-exec-9] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.15:47:42.534 [http-nio-8090-exec-9] INFO  UserService            - 用户登录，用户名：zs
25-01-26.15:47:42.536 [http-nio-8090-exec-9] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.15:47:42.858 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:47:42.859 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:51:49.921 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:51:49.922 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:52:15.022 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:52:15.023 [http-nio-8090-exec-5] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:52:16.400 [http-nio-8090-exec-6] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.15:52:16.400 [http-nio-8090-exec-6] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.15:52:17.701 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:52:17.702 [http-nio-8090-exec-7] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:52:19.835 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.15:52:19.836 [http-nio-8090-exec-9] INFO  UserService            - 获取用户列表，角色：null
25-01-26.15:52:21.342 [http-nio-8090-exec-8] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.15:52:21.342 [http-nio-8090-exec-8] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.15:52:25.219 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:52:25.219 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:52:29.785 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:52:29.786 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:55:07.380 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:55:07.380 [http-nio-8090-exec-4] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:56:17.588 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:56:17.589 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:56:17.792 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:56:17.793 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:57:26.647 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:57:26.647 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:57:34.250 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:57:34.250 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:57:34.458 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:57:34.459 [http-nio-8090-exec-9] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:57:42.660 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:57:42.661 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:58:50.951 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:58:50.952 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:58:51.056 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:58:51.056 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:59:58.749 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:59:58.749 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:59:58.844 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:59:58.845 [http-nio-8090-exec-4] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:59:59.717 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:59:59.717 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.15:59:59.743 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.15:59:59.743 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:00:00.628 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:00:00.628 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:00:00.650 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:00:00.650 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:00:08.292 [http-nio-8090-exec-9] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.16:00:08.292 [http-nio-8090-exec-9] INFO  UserService            - 用户登录，用户名：zs
25-01-26.16:00:08.294 [http-nio-8090-exec-9] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.16:00:08.616 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:00:08.617 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:01:58.506 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:01:58.507 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:01:58.720 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:01:58.720 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:02:56.336 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:02:56.337 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:03:23.511 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:03:23.511 [http-nio-8090-exec-4] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:03:31.995 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:03:31.996 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:03:42.691 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:03:42.692 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:03:42.892 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:03:42.893 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:03:45.373 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:03:45.374 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:03:55.282 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:03:55.283 [http-nio-8090-exec-9] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:04:04.428 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:04:04.428 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:04:14.381 [http-nio-8090-exec-10] INFO  UserController         - 收到用户登录请求，用户名：admin
25-01-26.16:04:14.381 [http-nio-8090-exec-10] INFO  UserService            - 用户登录，用户名：admin
25-01-26.16:04:14.383 [http-nio-8090-exec-10] INFO  UserService            - 用户登录成功，用户ID：1
25-01-26.16:04:14.706 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：1
25-01-26.16:04:14.706 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：1
25-01-26.16:04:18.308 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：1
25-01-26.16:04:18.309 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：1
25-01-26.16:04:37.823 [http-nio-8090-exec-4] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.16:04:37.823 [http-nio-8090-exec-4] INFO  UserService            - 用户登录，用户名：zs
25-01-26.16:04:37.824 [http-nio-8090-exec-4] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.16:04:37.832 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:04:37.833 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:04:41.693 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:04:41.694 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:04:43.884 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:04:43.885 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:05:11.686 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:05:11.687 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:05:16.290 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:05:16.291 [http-nio-8090-exec-9] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:05:19.786 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:05:19.786 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:05:20.910 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:05:20.911 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:05:21.076 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:05:21.077 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:22:35.541 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m18s258ms185µs).
25-01-26.16:53:50.433 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.16:53:50.434 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.16:54:58.168 [http-nio-8090-exec-8] INFO  UserController         - 收到用户登录请求，用户名：admin
25-01-26.16:54:58.168 [http-nio-8090-exec-8] INFO  UserService            - 用户登录，用户名：admin
25-01-26.16:54:58.169 [http-nio-8090-exec-8] INFO  UserService            - 用户登录成功，用户ID：1
25-01-26.16:56:31.955 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：null
25-01-26.16:56:31.958 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：null
25-01-26.16:58:46.692 [http-nio-8090-exec-5] ERROR JwtInterceptor         - Token验证失败
io.jsonwebtoken.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:354)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.dil.common.utils.JwtUtil.getClaimsFromToken(JwtUtil.java:59)
	at com.dil.common.interceptor.JwtInterceptor.preHandle(JwtInterceptor.java:54)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.16:59:25.108 [http-nio-8090-exec-6] ERROR JwtInterceptor         - Token验证失败
io.jsonwebtoken.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:354)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.dil.common.utils.JwtUtil.getClaimsFromToken(JwtUtil.java:59)
	at com.dil.common.interceptor.JwtInterceptor.preHandle(JwtInterceptor.java:54)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.16:59:38.665 [http-nio-8090-exec-7] INFO  UserController         - 收到用户登录请求，用户名：admin
25-01-26.16:59:38.665 [http-nio-8090-exec-7] INFO  UserService            - 用户登录，用户名：admin
25-01-26.16:59:38.666 [http-nio-8090-exec-7] INFO  UserService            - 用户登录成功，用户ID：1
25-01-26.16:59:51.460 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.16:59:51.460 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.17:09:20.883 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.17:09:20.888 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.17:09:27.797 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 12744 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.17:09:27.799 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.17:09:27.799 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.17:09:28.228 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.17:09:28.242 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
25-01-26.17:09:28.593 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.17:09:28.594 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.17:09:28.594 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.17:09:28.594 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.17:09:28.596 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.17:09:28.602 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.17:09:28.603 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.17:09:28.603 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.17:09:28.736 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.17:09:28.736 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 892 ms
25-01-26.17:09:29.105 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5a566922]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.17:09:29.112 [cluster-ClusterId{value='6795fbc9d2eeeb1515453bf2', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:3}] to localhost:27017
25-01-26.17:09:29.112 [cluster-rtt-ClusterId{value='6795fbc9d2eeeb1515453bf2', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:4}] to localhost:27017
25-01-26.17:09:29.112 [cluster-ClusterId{value='6795fbc9d2eeeb1515453bf2', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16805100}
25-01-26.17:09:29.591 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.17:09:29.605 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.17:09:29.612 [main            ] INFO  App                    - Started App in 2.195 seconds (JVM running for 3.439)
25-01-26.17:29:20.588 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.17:29:20.588 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.17:29:20.589 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.17:29:21.362 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.17:29:21.369 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.17:29:21.581 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.17:29:21.588 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.17:29:31.664 [http-nio-8090-exec-2] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.17:29:31.664 [http-nio-8090-exec-2] INFO  UserService            - 用户登录，用户名：zs
25-01-26.17:29:31.674 [http-nio-8090-exec-2] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.17:29:31.894 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.17:29:31.895 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.17:29:36.566 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：
25-01-26.17:29:36.569 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：
25-01-26.17:29:53.140 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：
25-01-26.17:29:53.140 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：
25-01-26.17:31:47.401 [http-nio-8090-exec-7] ERROR JwtInterceptor         - Token验证失败
io.jsonwebtoken.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:354)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.dil.common.utils.JwtUtil.getClaimsFromToken(JwtUtil.java:59)
	at com.dil.common.interceptor.JwtInterceptor.preHandle(JwtInterceptor.java:54)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:148)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.17:34:27.881 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：
25-01-26.17:34:27.881 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：
25-01-26.17:35:05.195 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:35:05.196 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:35:21.695 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.17:35:21.696 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.17:35:21.941 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:35:21.941 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:35:33.330 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:35:33.330 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:36:27.501 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.17:36:27.501 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.17:39:11.355 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.17:39:11.364 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.17:39:14.195 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 14092 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.17:39:14.197 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.17:39:14.197 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.17:39:14.635 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.17:39:14.649 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.17:39:15.011 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.17:39:15.011 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.17:39:15.011 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.17:39:15.012 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.17:39:15.014 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.17:39:15.019 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.17:39:15.020 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.17:39:15.020 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.17:39:15.145 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.17:39:15.145 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 905 ms
25-01-26.17:39:15.534 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7c46c9c3]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.17:39:15.541 [cluster-ClusterId{value='679602c3bb910e5a1508ac56', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:5}] to localhost:27017
25-01-26.17:39:15.541 [cluster-rtt-ClusterId{value='679602c3bb910e5a1508ac56', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:6}] to localhost:27017
25-01-26.17:39:15.541 [cluster-ClusterId{value='679602c3bb910e5a1508ac56', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15867800}
25-01-26.17:39:16.034 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.17:39:16.049 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.17:39:16.056 [main            ] INFO  App                    - Started App in 2.229 seconds (JVM running for 3.507)
25-01-26.17:39:33.053 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.17:39:33.053 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.17:39:33.054 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.17:39:33.839 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:39:33.844 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:39:33.870 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.17:39:34.093 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.17:39:34.308 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.17:39:34.308 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.17:42:18.752 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:42:18.752 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:42:24.338 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:42:24.338 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:42:27.583 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.17:42:27.583 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.17:42:47.234 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:42:47.234 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:42:48.597 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.17:42:48.598 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.17:43:14.287 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:43:14.288 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:43:15.287 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:43:15.287 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:43:23.190 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:43:23.190 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:43:24.473 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.17:43:24.473 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.17:44:59.813 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.17:44:59.813 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.17:45:44.600 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.17:45:44.600 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.18:26:48.090 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18m43s600ms314µs).
25-01-26.18:32:23.314 [http-nio-8090-exec-5] INFO  UserController         - 收到用户登录请求，用户名：admin
25-01-26.18:32:23.317 [http-nio-8090-exec-5] INFO  UserService            - 用户登录，用户名：admin
25-01-26.18:32:23.327 [http-nio-8090-exec-5] INFO  UserService            - 用户登录成功，用户ID：1
25-01-26.18:32:54.859 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：null
25-01-26.18:32:54.859 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：null
25-01-26.18:44:04.111 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.18:44:04.119 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.18:44:07.250 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 26272 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.18:44:07.252 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.18:44:07.252 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.18:44:07.711 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.18:44:07.726 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.18:44:08.151 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.18:44:08.152 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.18:44:08.153 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.18:44:08.153 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.18:44:08.156 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.18:44:08.163 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.18:44:08.164 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.18:44:08.164 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.18:44:08.300 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.18:44:08.301 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1005 ms
25-01-26.18:44:08.671 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@61608e1a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.18:44:08.677 [cluster-ClusterId{value='679611f8edca32715cf84542', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:8}] to localhost:27017
25-01-26.18:44:08.677 [cluster-rtt-ClusterId{value='679611f8edca32715cf84542', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:7}] to localhost:27017
25-01-26.18:44:08.678 [cluster-ClusterId{value='679611f8edca32715cf84542', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16532600}
25-01-26.18:44:09.152 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.18:44:09.167 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.18:44:09.174 [main            ] INFO  App                    - Started App in 2.325 seconds (JVM running for 3.734)
25-01-26.18:50:58.454 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.18:50:58.454 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.18:50:58.455 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.18:50:58.517 [http-nio-8090-exec-1] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.18:50:58.521 [http-nio-8090-exec-1] INFO  UserService            - 用户登录，用户名：zs
25-01-26.18:50:58.533 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.18:50:59.459 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.18:50:59.528 [http-nio-8090-exec-1] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.18:50:59.569 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.18:50:59.574 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.18:51:51.482 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:51:51.485 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:52:30.479 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:52:30.479 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:52:43.496 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:52:43.497 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:53:37.850 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:53:37.850 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:53:46.687 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:53:46.687 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:53:53.114 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.18:53:53.115 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.18:54:11.187 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：null
25-01-26.18:54:11.187 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：null
25-01-26.18:54:48.672 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：null，状态：null
25-01-26.18:54:48.672 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：null，状态：null
25-01-26.18:55:07.075 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:55:07.075 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:55:30.651 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:55:30.652 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:57:25.525 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:57:25.526 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.18:57:37.827 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.18:57:37.827 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:00:00.938 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:00:00.947 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:00:03.697 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 20988 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:00:03.699 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:00:03.700 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:00:04.128 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:00:04.142 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:00:04.497 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:00:04.497 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:00:04.497 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:00:04.497 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:00:04.500 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:00:04.506 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:00:04.506 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:00:04.507 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:00:04.632 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:00:04.632 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 889 ms
25-01-26.19:00:05.004 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@805e72e]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:00:05.010 [cluster-ClusterId{value='679615b449744f6e73d8ea37', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:9}] to localhost:27017
25-01-26.19:00:05.010 [cluster-rtt-ClusterId{value='679615b449744f6e73d8ea37', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:10}] to localhost:27017
25-01-26.19:00:05.010 [cluster-ClusterId{value='679615b449744f6e73d8ea37', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15208800}
25-01-26.19:00:05.489 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:00:05.504 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:00:05.511 [main            ] INFO  App                    - Started App in 2.18 seconds (JVM running for 3.396)
25-01-26.19:00:09.388 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:00:09.388 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:00:09.389 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.19:00:16.454 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:00:16.460 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:00:16.484 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:00:16.695 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:00:58.440 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:00:58.449 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:01:01.224 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 28568 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:01:01.226 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:01:01.226 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:01:01.647 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:01:01.660 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:01:02.025 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:01:02.025 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:01:02.026 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:01:02.026 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:01:02.028 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:01:02.034 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:01:02.034 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:01:02.034 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:01:02.159 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:01:02.159 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 890 ms
25-01-26.19:01:02.528 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2a0ea492]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:01:02.535 [cluster-rtt-ClusterId{value='679615eeb861cb5e53bffc00', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:12}] to localhost:27017
25-01-26.19:01:02.535 [cluster-ClusterId{value='679615eeb861cb5e53bffc00', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:11}] to localhost:27017
25-01-26.19:01:02.535 [cluster-ClusterId{value='679615eeb861cb5e53bffc00', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17291000}
25-01-26.19:01:03.026 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:01:03.041 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:01:03.048 [main            ] INFO  App                    - Started App in 2.181 seconds (JVM running for 3.392)
25-01-26.19:01:09.197 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:01:09.197 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:01:09.198 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.19:02:44.614 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.618 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.620 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.620 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.620 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.620 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.620 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.621 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.621 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.621 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.622 [http-nio-8090-exec-11] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-11] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.623 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:44.654 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:02:44.862 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:02:47.944 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.19:02:47.952 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.19:02:48.191 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:48.191 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:49.494 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:49.494 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:02:50.776 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:02:50.776 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:03:36.220 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:03:36.220 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:03:38.431 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:03:38.431 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:03:45.461 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:03:45.461 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:03:58.358 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:03:58.358 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:03:59.108 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:03:59.108 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:04:00.171 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:04:00.171 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:04:01.667 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:04:01.667 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:04:04.389 [http-nio-8090-exec-11] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:04:04.389 [http-nio-8090-exec-11] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:04:16.142 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:04:16.142 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:04:59.939 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:05:20.452 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:07:34.061 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:07:34.068 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:07:36.870 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 18800 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:07:36.872 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:07:36.872 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:07:37.312 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:07:37.326 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:07:37.675 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:07:37.676 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:07:37.676 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:07:37.676 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:07:37.678 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:07:37.684 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:07:37.685 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:07:37.685 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:07:37.812 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:07:37.812 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 899 ms
25-01-26.19:07:38.177 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@35eee641]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:07:38.184 [cluster-rtt-ClusterId{value='6796177a1102d471e811cca4', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:13}] to localhost:27017
25-01-26.19:07:38.184 [cluster-ClusterId{value='6796177a1102d471e811cca4', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:14}] to localhost:27017
25-01-26.19:07:38.184 [cluster-ClusterId{value='6796177a1102d471e811cca4', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16461300}
25-01-26.19:07:38.671 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:07:38.685 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:07:38.693 [main            ] INFO  App                    - Started App in 2.183 seconds (JVM running for 3.417)
25-01-26.19:07:41.898 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:07:41.898 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:07:41.898 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-01-26.19:07:42.662 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:07:44.807 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:07:44.833 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:07:45.042 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:08:23.011 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.19:08:23.011 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.19:08:24.575 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:08:24.576 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:08:27.928 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:08:27.929 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:08:41.494 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:08:41.494 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:08:49.582 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：cancelled
25-01-26.19:08:49.582 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：cancelled
25-01-26.19:08:56.068 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：completed
25-01-26.19:08:56.069 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：completed
25-01-26.19:08:57.904 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:08:57.905 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:09:02.511 [http-nio-8090-exec-9] ERROR GlobalExceptionHandler - 系统异常
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'status' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.19:10:24.175 [http-nio-8090-exec-10] ERROR GlobalExceptionHandler - 系统异常
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'status' for method parameter type String is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
25-01-26.19:11:08.653 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:11:08.654 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:11:14.721 [http-nio-8090-exec-2] INFO  AppointmentController  - 修改预约状态，预约ID：2
25-01-26.19:11:17.776 [http-nio-8090-exec-2] INFO  AppointmentService     - 修改预约状态：2
25-01-26.19:11:17.781 [http-nio-8090-exec-2] ERROR GlobalExceptionHandler - 系统异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='status', mode=IN, javaType=class java.lang.Integer, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy73.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy74.updateAppointmentStatus(Unknown Source)
	at com.dil.appointment.service.AppointmentService.updateAppointmentStatus(AppointmentService.java:70)
	at com.dil.appointment.service.AppointmentService$$FastClassBySpringCGLIB$$2c3f8392.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.dil.appointment.service.AppointmentService$$EnhancerBySpringCGLIB$$758fc2d4.updateAppointmentStatus(<generated>)
	at com.dil.appointment.controller.AppointmentController.updateAppointmentStatus(AppointmentController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='status', mode=IN, javaType=class java.lang.Integer, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:75)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 76 common frames omitted
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.type.IntegerTypeHandler.setNonNullParameter(IntegerTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:73)
	... 77 common frames omitted
25-01-26.19:11:33.314 [http-nio-8090-exec-3] INFO  AppointmentController  - 修改预约状态，预约ID：2
25-01-26.19:12:03.241 [http-nio-8090-exec-3] INFO  AppointmentService     - 修改预约状态：2
25-01-26.19:12:03.241 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s464ms334µs).
25-01-26.19:12:03.243 [http-nio-8090-exec-3] ERROR GlobalExceptionHandler - 系统异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='status', mode=IN, javaType=class java.lang.Integer, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy73.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy74.updateAppointmentStatus(Unknown Source)
	at com.dil.appointment.service.AppointmentService.updateAppointmentStatus(AppointmentService.java:70)
	at com.dil.appointment.service.AppointmentService$$FastClassBySpringCGLIB$$2c3f8392.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.dil.appointment.service.AppointmentService$$EnhancerBySpringCGLIB$$758fc2d4.updateAppointmentStatus(<generated>)
	at com.dil.appointment.controller.AppointmentController.updateAppointmentStatus(AppointmentController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='status', mode=IN, javaType=class java.lang.Integer, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:75)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 76 common frames omitted
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.type.IntegerTypeHandler.setNonNullParameter(IntegerTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:73)
	... 77 common frames omitted
25-01-26.19:14:22.020 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:14:22.028 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:14:28.453 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 13156 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:14:28.455 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:14:28.456 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:14:28.891 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:14:28.905 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:14:29.256 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:14:29.257 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:14:29.257 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:14:29.257 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:14:29.259 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:14:29.265 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:14:29.266 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:14:29.266 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:14:29.398 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:14:29.398 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 899 ms
25-01-26.19:14:29.770 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@49671897]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:14:29.776 [cluster-ClusterId{value='67961915d5bfbc2333d57799', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:15}] to localhost:27017
25-01-26.19:14:29.776 [cluster-rtt-ClusterId{value='67961915d5bfbc2333d57799', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:16}] to localhost:27017
25-01-26.19:14:29.777 [cluster-ClusterId{value='67961915d5bfbc2333d57799', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17185500}
25-01-26.19:14:30.266 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:14:30.281 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:14:30.288 [main            ] INFO  App                    - Started App in 2.202 seconds (JVM running for 3.387)
25-01-26.19:14:50.375 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:14:50.375 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:14:50.376 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.19:14:51.130 [http-nio-8090-exec-1] INFO  AppointmentController  - 修改预约状态，预约ID：2, 预约状态 confirmed
25-01-26.19:15:06.006 [http-nio-8090-exec-1] INFO  AppointmentService     - 修改预约状态：2
25-01-26.19:15:06.017 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:15:06.226 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:15:06.251 [http-nio-8090-exec-1] ERROR GlobalExceptionHandler - 系统异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='status', mode=IN, javaType=class java.lang.Integer, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy73.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy74.updateAppointmentStatus(Unknown Source)
	at com.dil.appointment.service.AppointmentService.updateAppointmentStatus(AppointmentService.java:70)
	at com.dil.appointment.service.AppointmentService$$FastClassBySpringCGLIB$$2c3f8392.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.dil.appointment.service.AppointmentService$$EnhancerBySpringCGLIB$$84049dc2.updateAppointmentStatus(<generated>)
	at com.dil.appointment.controller.AppointmentController.updateAppointmentStatus(AppointmentController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='status', mode=IN, javaType=class java.lang.Integer, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:75)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 76 common frames omitted
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.ibatis.type.IntegerTypeHandler.setNonNullParameter(IntegerTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:73)
	... 77 common frames omitted
25-01-26.19:16:18.960 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:16:18.969 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:16:21.793 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 2492 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:16:21.795 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:16:21.796 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:16:22.271 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:16:22.286 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:16:22.700 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:16:22.701 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:16:22.701 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:16:22.701 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:16:22.703 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:16:22.711 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:16:22.712 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:16:22.712 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:16:22.843 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:16:22.843 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1004 ms
25-01-26.19:16:23.207 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@3830b06c]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:16:23.213 [cluster-ClusterId{value='67961987ddcb2d1b2f8def65', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:17}] to localhost:27017
25-01-26.19:16:23.213 [cluster-rtt-ClusterId{value='67961987ddcb2d1b2f8def65', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:18}] to localhost:27017
25-01-26.19:16:23.213 [cluster-ClusterId{value='67961987ddcb2d1b2f8def65', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16142100}
25-01-26.19:16:23.702 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:16:23.716 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:16:23.723 [main            ] INFO  App                    - Started App in 2.296 seconds (JVM running for 3.547)
25-01-26.19:16:28.065 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:16:28.065 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:16:28.066 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.19:16:28.844 [http-nio-8090-exec-1] INFO  AppointmentController  - 修改预约状态，预约ID：2, 预约状态 confirmed
25-01-26.19:16:31.367 [http-nio-8090-exec-1] INFO  AppointmentService     - 修改预约状态：2
25-01-26.19:16:31.379 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:16:31.594 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:16:31.670 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:16:31.670 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:16:37.252 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:16:37.252 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:17:00.074 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:17:00.074 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:17:16.154 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:17:16.154 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:18:22.446 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:18:22.446 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:24:21.313 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:24:21.313 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:24:21.590 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:24:21.590 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:24:26.229 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:24:26.229 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:24:28.888 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:24:28.888 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:24:54.551 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:24:54.551 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:25:03.503 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:25:03.503 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:25:05.580 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:25:05.580 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:25:08.633 [http-nio-8090-exec-4] INFO  AppointmentController  - 修改预约状态，预约ID：1, 预约状态 cancelled
25-01-26.19:25:08.633 [http-nio-8090-exec-4] INFO  AppointmentService     - 修改预约状态：1
25-01-26.19:25:08.881 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:25:08.882 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:25:10.767 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.19:25:10.767 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.19:25:20.694 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:25:20.694 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:25:22.499 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:25:22.500 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:25:24.327 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:25:24.327 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：confirmed
25-01-26.19:25:26.772 [http-nio-8090-exec-10] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：pending
25-01-26.19:25:26.772 [http-nio-8090-exec-10] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：pending
25-01-26.19:25:28.114 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:25:28.114 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:26:39.590 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.19:26:39.590 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.19:30:16.750 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.19:30:16.750 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.19:30:21.153 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:30:21.153 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:30:35.191 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:30:35.191 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:31:20.762 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:31:20.770 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:31:23.724 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 21280 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:31:23.726 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:31:23.726 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:31:24.174 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:31:24.189 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:31:24.551 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:31:24.552 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:31:24.552 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:31:24.552 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:31:24.555 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:31:24.561 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:31:24.561 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:31:24.561 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:31:24.692 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:31:24.692 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 922 ms
25-01-26.19:31:25.067 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@49671897]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:31:25.073 [cluster-rtt-ClusterId{value='67961d0d87845b04adce6ec3', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:19}] to localhost:27017
25-01-26.19:31:25.073 [cluster-ClusterId{value='67961d0d87845b04adce6ec3', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:20}] to localhost:27017
25-01-26.19:31:25.074 [cluster-ClusterId{value='67961d0d87845b04adce6ec3', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15880400}
25-01-26.19:31:25.559 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:31:25.574 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:31:25.581 [main            ] INFO  App                    - Started App in 2.242 seconds (JVM running for 3.489)
25-01-26.19:31:44.809 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:31:44.809 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:31:44.810 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.19:31:45.572 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:31:45.577 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:31:45.590 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:31:45.796 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:31:45.875 [http-nio-8090-exec-1] ERROR GlobalExceptionHandler - 系统异常
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
### The error may exist in file [F:\code\work\mental-health\management\target\classes\mybatis\mapper\AppointmentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT              a.id,             a.user_id,             a.doctor_id,             up.username as userName,             up.avatar_url as userAvatar,             d.username as doctorName,             p.title as doctorTitle,             a.schedule_time,             a.status,             a.payment_status,             a.form,             a.content,             a.time,             a.created_at,             a.updated_at         FROM              appointments a             LEFT JOIN users u ON a.user_id = u.id             LEFT JOIN user_profiles up ON u.id = up.user_id             LEFT JOIN users d ON a.doctor_id = d.id             LEFT JOIN psychologists p ON a.doctor_id = p.user_id         WHERE a.id = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy73.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy74.getAppointmentDetail(Unknown Source)
	at com.dil.appointment.service.AppointmentService.getAppointmentDetail(AppointmentService.java:61)
	at com.dil.appointment.service.AppointmentService$$FastClassBySpringCGLIB$$2c3f8392.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.dil.appointment.service.AppointmentService$$EnhancerBySpringCGLIB$$c3025e84.getAppointmentDetail(<generated>)
	at com.dil.appointment.controller.AppointmentController.getAppointmentDetail(AppointmentController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy102.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
25-01-26.19:31:45.918 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:31:45.918 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:31:45.920 [http-nio-8090-exec-2] ERROR GlobalExceptionHandler - 系统异常
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
### The error may exist in file [F:\code\work\mental-health\management\target\classes\mybatis\mapper\AppointmentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT              a.id,             a.user_id,             a.doctor_id,             up.username as userName,             up.avatar_url as userAvatar,             d.username as doctorName,             p.title as doctorTitle,             a.schedule_time,             a.status,             a.payment_status,             a.form,             a.content,             a.time,             a.created_at,             a.updated_at         FROM              appointments a             LEFT JOIN users u ON a.user_id = u.id             LEFT JOIN user_profiles up ON u.id = up.user_id             LEFT JOIN users d ON a.doctor_id = d.id             LEFT JOIN psychologists p ON a.doctor_id = p.user_id         WHERE a.id = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy73.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy74.getAppointmentDetail(Unknown Source)
	at com.dil.appointment.service.AppointmentService.getAppointmentDetail(AppointmentService.java:61)
	at com.dil.appointment.service.AppointmentService$$FastClassBySpringCGLIB$$2c3f8392.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.dil.appointment.service.AppointmentService$$EnhancerBySpringCGLIB$$c3025e84.getAppointmentDetail(<generated>)
	at com.dil.appointment.controller.AppointmentController.getAppointmentDetail(AppointmentController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'up.username' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy102.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
25-01-26.19:32:15.230 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:32:15.239 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.19:32:18.166 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 18224 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.19:32:18.168 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.19:32:18.168 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.19:32:18.599 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.19:32:18.612 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.19:32:18.965 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.19:32:18.966 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.19:32:18.966 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.19:32:18.966 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.19:32:18.968 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.19:32:18.974 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.19:32:18.974 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.19:32:18.974 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.19:32:19.100 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.19:32:19.100 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 888 ms
25-01-26.19:32:19.493 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@209f3887]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.19:32:19.500 [cluster-ClusterId{value='67961d433130f1297594dae3', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:21}] to localhost:27017
25-01-26.19:32:19.500 [cluster-rtt-ClusterId{value='67961d433130f1297594dae3', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:22}] to localhost:27017
25-01-26.19:32:19.501 [cluster-ClusterId{value='67961d433130f1297594dae3', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15826900}
25-01-26.19:32:19.988 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.19:32:20.003 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.19:32:20.011 [main            ] INFO  App                    - Started App in 2.205 seconds (JVM running for 3.398)
25-01-26.19:32:23.098 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.19:32:23.098 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.19:32:23.098 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-01-26.19:32:23.856 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.19:32:23.862 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.19:32:23.875 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.19:32:24.078 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.19:32:32.198 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.19:32:32.198 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.19:32:39.053 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:32:39.053 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:32:40.984 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：cancelled
25-01-26.19:32:40.984 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：cancelled
25-01-26.19:32:42.634 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：completed
25-01-26.19:32:42.634 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：completed
25-01-26.19:32:43.540 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.19:32:43.540 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.19:33:26.782 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.19:33:26.791 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.21:35:37.506 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 21508 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.21:35:37.509 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.21:35:37.509 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.21:35:38.061 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.21:35:38.076 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
25-01-26.21:35:38.508 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.21:35:38.509 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.21:35:38.509 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.21:35:38.509 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.21:35:38.522 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.21:35:38.529 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.21:35:38.530 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.21:35:38.530 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.21:35:38.696 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.21:35:38.696 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1134 ms
25-01-26.21:35:39.171 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@1b24ea2a]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.21:35:39.178 [cluster-ClusterId{value='67963a2ba3acf60974e006f6', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:27017
25-01-26.21:35:39.178 [cluster-rtt-ClusterId{value='67963a2ba3acf60974e006f6', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:2}] to localhost:27017
25-01-26.21:35:39.178 [cluster-ClusterId{value='67963a2ba3acf60974e006f6', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19685700}
25-01-26.21:35:39.744 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.21:35:39.759 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.21:35:39.766 [main            ] INFO  App                    - Started App in 2.75 seconds (JVM running for 4.508)
25-01-26.21:36:10.548 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.21:36:10.548 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.21:36:10.549 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.21:36:10.619 [http-nio-8090-exec-1] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.21:36:10.624 [http-nio-8090-exec-1] INFO  UserService            - 用户登录，用户名：zs
25-01-26.21:36:10.639 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.21:36:11.642 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.21:36:11.725 [http-nio-8090-exec-1] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.21:36:11.769 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.21:36:11.775 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.21:36:14.131 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.21:36:14.134 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.21:36:16.642 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.21:36:16.643 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.21:41:01.601 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.21:41:01.602 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.21:47:28.430 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.21:47:28.431 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.21:47:31.775 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.21:47:31.777 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.21:55:43.796 [http-nio-8090-exec-8] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.21:55:43.797 [http-nio-8090-exec-8] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.21:55:46.630 [http-nio-8090-exec-9] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.21:55:46.630 [http-nio-8090-exec-9] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.21:56:46.056 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.21:56:46.057 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.21:59:22.442 [http-nio-8090-exec-2] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.21:59:22.442 [http-nio-8090-exec-2] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.21:59:23.997 [http-nio-8090-exec-4] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：2
25-01-26.21:59:23.997 [http-nio-8090-exec-4] INFO  AppointmentService     - 查询预约详情，预约ID：2
25-01-26.22:00:06.174 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:00:06.175 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:00:06.220 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.22:00:06.220 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.22:00:08.366 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.22:00:08.366 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.22:00:14.845 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约详情请求，预约ID：1
25-01-26.22:00:14.845 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约详情，预约ID：1
25-01-26.22:06:06.100 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:06:06.102 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:13:24.140 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.22:13:24.146 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-01-26.22:13:27.053 [main            ] INFO  App                    - Starting App using Java 1.8.0_321 on LAPTOP-MV2KUHP1 with PID 5068 (F:\code\work\mental-health\management\target\classes started by Lenovo in F:\code\work\mental-health\management)
25-01-26.22:13:27.055 [main            ] DEBUG App                    - Running with Spring Boot v2.7.12, Spring v5.3.27
25-01-26.22:13:27.055 [main            ] INFO  App                    - The following 1 profile is active: "dev"
25-01-26.22:13:27.514 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
25-01-26.22:13:27.529 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
25-01-26.22:13:27.914 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
25-01-26.22:13:27.915 [main            ] INFO  AprLifecycleListener   - Loaded Apache Tomcat Native library [1.2.35] using APR version [1.7.0].
25-01-26.22:13:27.915 [main            ] INFO  AprLifecycleListener   - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
25-01-26.22:13:27.915 [main            ] INFO  AprLifecycleListener   - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
25-01-26.22:13:27.918 [main            ] INFO  AprLifecycleListener   - OpenSSL successfully initialized [OpenSSL 1.1.1q  5 Jul 2022]
25-01-26.22:13:27.923 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
25-01-26.22:13:27.923 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-01-26.22:13:27.923 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-01-26.22:13:28.057 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-01-26.22:13:28.058 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 960 ms
25-01-26.22:13:28.443 [main            ] INFO  client                 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/1.8.0_321-b07"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@296edc75]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
25-01-26.22:13:28.450 [cluster-rtt-ClusterId{value='679643082578210c68927922', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:2, serverValue:3}] to localhost:27017
25-01-26.22:13:28.450 [cluster-ClusterId{value='679643082578210c68927922', description='null'}-localhost:27017] INFO  connection             - Opened connection [connectionId{localValue:1, serverValue:4}] to localhost:27017
25-01-26.22:13:28.450 [cluster-ClusterId{value='679643082578210c68927922', description='null'}-localhost:27017] INFO  cluster                - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16602200}
25-01-26.22:13:28.943 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
25-01-26.22:13:28.957 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
25-01-26.22:13:28.965 [main            ] INFO  App                    - Started App in 2.277 seconds (JVM running for 3.469)
25-01-26.22:14:26.661 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-01-26.22:14:26.661 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-01-26.22:14:26.662 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-01-26.22:14:27.425 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:14:27.431 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-01-26.22:14:27.639 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-01-26.22:14:27.646 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:14:27.775 [http-nio-8090-exec-2] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:14:27.778 [http-nio-8090-exec-2] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:19:36.478 [http-nio-8090-exec-4] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:19:36.478 [http-nio-8090-exec-4] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:20:24.019 [http-nio-8090-exec-3] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:20:24.019 [http-nio-8090-exec-3] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:20:49.909 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.22:20:49.911 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.22:20:55.529 [http-nio-8090-exec-6] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:20:55.529 [http-nio-8090-exec-6] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:21:11.745 [http-nio-8090-exec-5] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:21:11.745 [http-nio-8090-exec-5] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:23:25.158 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:23:25.159 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:23:25.229 [http-nio-8090-exec-9] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:23:25.229 [http-nio-8090-exec-9] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:23:33.800 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:23:33.801 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:23:33.836 [http-nio-8090-exec-1] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:23:33.836 [http-nio-8090-exec-1] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:23:39.257 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:23:39.259 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:23:39.293 [http-nio-8090-exec-4] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:23:39.294 [http-nio-8090-exec-4] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:27:31.075 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:27:31.076 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:27:31.265 [http-nio-8090-exec-7] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:27:31.265 [http-nio-8090-exec-7] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:27:49.490 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:27:49.491 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:27:49.521 [http-nio-8090-exec-5] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:27:49.521 [http-nio-8090-exec-5] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:27:53.769 [http-nio-8090-exec-8] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:27:53.769 [http-nio-8090-exec-8] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:30:02.845 [http-nio-8090-exec-9] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:30:02.845 [http-nio-8090-exec-9] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:30:25.529 [http-nio-8090-exec-10] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:30:25.529 [http-nio-8090-exec-10] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:07.402 [http-nio-8090-exec-1] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:07.402 [http-nio-8090-exec-1] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:08.879 [http-nio-8090-exec-2] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:08.879 [http-nio-8090-exec-2] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:12.773 [http-nio-8090-exec-4] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:12.773 [http-nio-8090-exec-4] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:23.176 [http-nio-8090-exec-3] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:23.177 [http-nio-8090-exec-3] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:39.542 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:32:39.542 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:32:39.580 [http-nio-8090-exec-6] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:32:39.580 [http-nio-8090-exec-6] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:33:27.927 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.22:33:27.927 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.22:33:30.237 [http-nio-8090-exec-8] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:33:30.237 [http-nio-8090-exec-8] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:34:17.374 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:34:17.375 [http-nio-8090-exec-9] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:34:17.531 [http-nio-8090-exec-10] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:34:17.531 [http-nio-8090-exec-10] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:34:20.327 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:34:20.328 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:34:20.356 [http-nio-8090-exec-2] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:34:20.356 [http-nio-8090-exec-2] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:35:00.680 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:35:00.681 [http-nio-8090-exec-4] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:35:00.897 [http-nio-8090-exec-3] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:35:00.897 [http-nio-8090-exec-3] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:35:07.489 [http-nio-8090-exec-7] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:35:07.489 [http-nio-8090-exec-7] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:37:11.398 [http-nio-8090-exec-6] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.22:37:11.399 [http-nio-8090-exec-6] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.22:37:14.886 [http-nio-8090-exec-5] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:37:14.886 [http-nio-8090-exec-5] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:39:11.893 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.22:39:11.894 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.22:39:12.118 [http-nio-8090-exec-9] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.22:39:12.118 [http-nio-8090-exec-9] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:05:13.126 [http-nio-8090-exec-10] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:05:13.126 [http-nio-8090-exec-10] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:08:21.065 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:21.066 [http-nio-8090-exec-1] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:08:22.189 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:22.190 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:08:23.085 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:23.086 [http-nio-8090-exec-4] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:08:25.206 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:25.207 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:08:27.419 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:27.420 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:08:28.509 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:28.510 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:08:32.213 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:08:32.215 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:09:10.412 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:09:10.413 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:09:53.322 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.23:09:53.323 [http-nio-8090-exec-9] INFO  UserService            - 获取用户列表，角色：null
25-01-26.23:09:54.406 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.23:09:54.406 [http-nio-8090-exec-10] INFO  UserService            - 获取用户列表，角色：null
25-01-26.23:09:58.189 [http-nio-8090-exec-1] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.23:09:58.189 [http-nio-8090-exec-1] INFO  UserService            - 获取用户列表，角色：null
25-01-26.23:09:59.595 [http-nio-8090-exec-2] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.23:09:59.598 [http-nio-8090-exec-2] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.23:10:30.421 [http-nio-8090-exec-4] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.23:10:30.421 [http-nio-8090-exec-4] INFO  UserService            - 用户登录，用户名：zs
25-01-26.23:10:30.430 [http-nio-8090-exec-4] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.23:10:30.648 [http-nio-8090-exec-3] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:10:30.649 [http-nio-8090-exec-3] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:10:33.630 [http-nio-8090-exec-7] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.23:10:33.630 [http-nio-8090-exec-7] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.23:10:37.031 [http-nio-8090-exec-6] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:10:37.031 [http-nio-8090-exec-6] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:11:13.705 [http-nio-8090-exec-5] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:11:13.705 [http-nio-8090-exec-5] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:11:21.938 [http-nio-8090-exec-8] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:11:21.939 [http-nio-8090-exec-8] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:11:49.596 [http-nio-8090-exec-9] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.23:11:49.596 [http-nio-8090-exec-9] INFO  UserService            - 用户登录，用户名：zs
25-01-26.23:11:49.598 [http-nio-8090-exec-9] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.23:11:49.912 [http-nio-8090-exec-10] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:11:49.913 [http-nio-8090-exec-10] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:11:52.043 [http-nio-8090-exec-1] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:11:52.043 [http-nio-8090-exec-1] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:12:06.656 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:12:06.657 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:12:09.513 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.23:12:09.514 [http-nio-8090-exec-4] INFO  UserService            - 获取用户列表，角色：null
25-01-26.23:12:10.585 [http-nio-8090-exec-3] INFO  PsychologistController - 收到获取心理医生列表请求，雇佣状态：null
25-01-26.23:12:10.585 [http-nio-8090-exec-3] INFO  PsychologistService    - 获取心理医生列表，参数：employmentStatus=null
25-01-26.23:12:18.609 [http-nio-8090-exec-7] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.23:12:18.609 [http-nio-8090-exec-7] INFO  UserService            - 用户登录，用户名：zs
25-01-26.23:12:18.612 [http-nio-8090-exec-7] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.23:12:18.621 [http-nio-8090-exec-6] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:12:18.621 [http-nio-8090-exec-6] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:12:20.101 [http-nio-8090-exec-5] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.23:12:20.101 [http-nio-8090-exec-5] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.23:12:21.171 [http-nio-8090-exec-8] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:12:21.171 [http-nio-8090-exec-8] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:14:49.717 [http-nio-8090-exec-9] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:14:49.719 [http-nio-8090-exec-9] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:14:51.536 [http-nio-8090-exec-10] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:14:51.536 [http-nio-8090-exec-10] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:14:55.261 [http-nio-8090-exec-1] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.23:14:55.261 [http-nio-8090-exec-1] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.23:14:56.362 [http-nio-8090-exec-2] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:14:56.362 [http-nio-8090-exec-2] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:33:28.677 [http-nio-8090-exec-4] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:33:28.677 [http-nio-8090-exec-4] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:33:39.830 [http-nio-8090-exec-3] INFO  AppointmentController  - 收到查询预约列表请求，用户ID：null，医生ID：2，状态：
25-01-26.23:33:39.830 [http-nio-8090-exec-3] INFO  AppointmentService     - 查询预约列表，用户ID：null，医生ID：2，状态：
25-01-26.23:33:41.016 [http-nio-8090-exec-7] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:33:41.016 [http-nio-8090-exec-7] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:33:48.724 [http-nio-8090-exec-6] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:33:48.724 [http-nio-8090-exec-6] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:34:00.154 [http-nio-8090-exec-5] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:34:00.154 [http-nio-8090-exec-5] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:17.889 [http-nio-8090-exec-8] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:17.889 [http-nio-8090-exec-8] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:19.506 [http-nio-8090-exec-9] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:19.506 [http-nio-8090-exec-9] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:21.353 [http-nio-8090-exec-10] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:21.353 [http-nio-8090-exec-10] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:23.948 [http-nio-8090-exec-1] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:37:23.949 [http-nio-8090-exec-1] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:39:45.743 [http-nio-8090-exec-2] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:39:45.744 [http-nio-8090-exec-2] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:39:51.775 [http-nio-8090-exec-4] INFO  UserController         - 收到获取用户列表请求，角色：null
25-01-26.23:39:51.776 [http-nio-8090-exec-4] INFO  UserService            - 获取用户列表，角色：null
25-01-26.23:40:03.418 [http-nio-8090-exec-3] INFO  UserController         - 收到用户登录请求，用户名：zs
25-01-26.23:40:03.418 [http-nio-8090-exec-3] INFO  UserService            - 用户登录，用户名：zs
25-01-26.23:40:03.420 [http-nio-8090-exec-3] INFO  UserService            - 用户登录成功，用户ID：2
25-01-26.23:40:03.668 [http-nio-8090-exec-7] INFO  UserController         - 收到获取用户信息请求，用户ID：2
25-01-26.23:40:03.669 [http-nio-8090-exec-7] INFO  UserService            - 获取用户信息，用户ID：2
25-01-26.23:40:05.593 [http-nio-8090-exec-6] INFO  ConsultationController - 收到查询咨询记录列表请求，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:40:05.593 [http-nio-8090-exec-6] INFO  ConsultationService    - 查询咨询记录列表，医生ID：2，用户ID：null，预约ID：null
25-01-26.23:40:37.717 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-01-26.23:40:37.721 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
